# Generated by Django 4.2.8 on 2025-02-26 16:37

import core.enums
import core.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_choices_field.fields
import simple_history.models
import taggit.managers


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("taggit", "0005_auto_20220424_2025"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("authentikate", "0002_alter_user_unique_together_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Dataset",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="The time the dataset was created"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The name of the dataset", max_length=200
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="The description of the dataset",
                        max_length=1000,
                        null=True,
                    ),
                ),
                (
                    "is_default",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the dataset is the current default dataset for the user",
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        help_text="The user that created the dataset",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_datasets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="core.dataset",
                    ),
                ),
                (
                    "pinned_by",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The users that have pinned the dataset",
                        related_name="pinned_datasets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        help_text="Tags for the dataset",
                        through="taggit.TaggedItem",
                        to="taggit.Tag",
                        verbose_name="Tags",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Instrument",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=1000)),
                (
                    "manufacturer",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                ("model", models.CharField(blank=True, max_length=1000, null=True)),
                ("serial_number", models.CharField(max_length=1000, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="S3Store",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "path",
                    core.fields.S3Field(
                        blank=True,
                        help_text="The store of the image",
                        max_length=500,
                        null=True,
                        unique=True,
                    ),
                ),
                ("key", models.CharField(max_length=1000)),
                ("bucket", models.CharField(max_length=1000)),
                ("populated", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="ViewCollection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="The name of the view", max_length=1000),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BigFileStore",
            fields=[
                (
                    "s3store_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.s3store",
                    ),
                ),
            ],
            bases=("core.s3store",),
        ),
        migrations.CreateModel(
            name="MediaStore",
            fields=[
                (
                    "s3store_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.s3store",
                    ),
                ),
            ],
            bases=("core.s3store",),
        ),
        migrations.CreateModel(
            name="ParquetStore",
            fields=[
                (
                    "s3store_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.s3store",
                    ),
                ),
            ],
            bases=("core.s3store",),
        ),
        migrations.CreateModel(
            name="ZarrStore",
            fields=[
                (
                    "s3store_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.s3store",
                    ),
                ),
                ("shape", models.JSONField(blank=True, null=True)),
                ("chunks", models.JSONField(blank=True, null=True)),
                ("dtype", models.CharField(blank=True, max_length=1000, null=True)),
            ],
            bases=("core.s3store",),
        ),
        migrations.CreateModel(
            name="Trace",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        default="", help_text="The name of the image", max_length=1000
                    ),
                ),
                (
                    "description",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "kind",
                    django_choices_field.fields.TextChoicesField(
                        choices=[
                            ("MASK", "Mask (Value represent Labels)"),
                            ("VOXEL", "Voxel (Value represent Intensity)"),
                            ("RGB", "RGB (First three channel represent RGB)"),
                            ("UNKNOWN", "Unknown"),
                        ],
                        choices_enum=core.enums.ImageKind,
                        default="UNKNOWN",
                        help_text="The Representation can have vasrying kind, consult your API",
                        max_length=7,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "dataset",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="traces",
                        to="core.dataset",
                    ),
                ),
                (
                    "pinned_by",
                    models.ManyToManyField(
                        help_text="The users that have pinned the images",
                        related_name="pinned_traces",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        help_text="A comma-separated list of tags.",
                        through="taggit.TaggedItem",
                        to="taggit.Tag",
                        verbose_name="Tags",
                    ),
                ),
                (
                    "store",
                    models.ForeignKey(
                        blank=True,
                        help_text="The store of the trace",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.zarrstore",
                    ),
                ),
            ],
            options={
                "permissions": [("inspect_image", "Can view image")],
            },
        ),
        migrations.CreateModel(
            name="TimelineView",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "a_min",
                    models.IntegerField(
                        blank=True, help_text="The index of the channel", null=True
                    ),
                ),
                (
                    "a_max",
                    models.IntegerField(
                        blank=True, help_text="The index of the channel", null=True
                    ),
                ),
                (
                    "t_min",
                    models.IntegerField(
                        blank=True, help_text="The index of the channel", null=True
                    ),
                ),
                (
                    "t_max",
                    models.IntegerField(
                        blank=True, help_text="The index of the channel", null=True
                    ),
                ),
                (
                    "c_min",
                    models.IntegerField(
                        blank=True, help_text="The index of the channel", null=True
                    ),
                ),
                (
                    "c_max",
                    models.IntegerField(
                        blank=True, help_text="The index of the channel", null=True
                    ),
                ),
                (
                    "is_global",
                    models.BooleanField(
                        default=False, help_text="Whether the view is global or not"
                    ),
                ),
                (
                    "start_time",
                    models.DateTimeField(
                        blank=True, help_text="The start time of the view", null=True
                    ),
                ),
                (
                    "end_time",
                    models.DateTimeField(
                        blank=True, help_text="The end time of the view", null=True
                    ),
                ),
                (
                    "collection",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.viewcollection",
                    ),
                ),
                (
                    "trace",
                    simple_history.models.HistoricForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.trace"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ROI",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "vectors",
                    models.JSONField(
                        default=list,
                        help_text="A list of the ROI Vectors (specific for each type)",
                        max_length=3000,
                    ),
                ),
                (
                    "kind",
                    django_choices_field.fields.TextChoicesField(
                        choices=[
                            ("ellipse", "Ellipse"),
                            ("polygon", "POLYGON"),
                            ("line", "Line"),
                            ("rectangle", "Rectangle (XY)"),
                            ("spectral_rectangle", "Spectral Rectangle (XYC)"),
                            ("temporal_rectangle", "Temporal Rectangle (XYT)"),
                            ("cube", "Cube (XYZ)"),
                            ("spectral_cube", "Spectral Cube (XYZC)"),
                            ("temporal_cube", "Temporal Cube (XYZT)"),
                            ("hypercube", "Hypercube (XYZT)"),
                            ("spectral_hypercube", "Spectral Hypercube (XYZTC)"),
                            ("path", "Path"),
                            ("unknown", "Unknown"),
                            ("frame", "Frame"),
                            ("slice", "Slice"),
                            ("point", "Point"),
                        ],
                        choices_enum=core.enums.RoiKindChoices,
                        default="path",
                        help_text="The Roi can have vasrying kind, consult your API",
                        max_length=18,
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        blank=True,
                        help_text="The color of the ROI (for UI)",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now=True, help_text="The time the ROI was created"
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        help_text="The user that created the ROI",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "pinned_by",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The users that pinned this ROI",
                        related_name="pinned_rois",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "trace",
                    models.ForeignKey(
                        help_text="The Representation this ROI was original used to create (drawn on)",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rois",
                        to="core.trace",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HistoricalViewCollection",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "assignation_id",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "name",
                    models.CharField(help_text="The name of the view", max_length=1000),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "app",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="authentikate.app",
                    ),
                ),
                (
                    "history_relation",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="provenance",
                        to="core.viewcollection",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical view collection",
                "verbose_name_plural": "historical view collections",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalROI",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "assignation_id",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "vectors",
                    models.JSONField(
                        default=list,
                        help_text="A list of the ROI Vectors (specific for each type)",
                        max_length=3000,
                    ),
                ),
                (
                    "kind",
                    django_choices_field.fields.TextChoicesField(
                        choices=[
                            ("ellipse", "Ellipse"),
                            ("polygon", "POLYGON"),
                            ("line", "Line"),
                            ("rectangle", "Rectangle (XY)"),
                            ("spectral_rectangle", "Spectral Rectangle (XYC)"),
                            ("temporal_rectangle", "Temporal Rectangle (XYT)"),
                            ("cube", "Cube (XYZ)"),
                            ("spectral_cube", "Spectral Cube (XYZC)"),
                            ("temporal_cube", "Temporal Cube (XYZT)"),
                            ("hypercube", "Hypercube (XYZT)"),
                            ("spectral_hypercube", "Spectral Hypercube (XYZTC)"),
                            ("path", "Path"),
                            ("unknown", "Unknown"),
                            ("frame", "Frame"),
                            ("slice", "Slice"),
                            ("point", "Point"),
                        ],
                        choices_enum=core.enums.RoiKindChoices,
                        default="path",
                        help_text="The Roi can have vasrying kind, consult your API",
                        max_length=18,
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        blank=True,
                        help_text="The color of the ROI (for UI)",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True,
                        editable=False,
                        help_text="The time the ROI was created",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "app",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="authentikate.app",
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="The user that created the ROI",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "history_relation",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="provenance",
                        to="core.roi",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "trace",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="The Representation this ROI was original used to create (drawn on)",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="core.trace",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical roi",
                "verbose_name_plural": "historical rois",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalInstrument",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "assignation_id",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                ("name", models.CharField(max_length=1000)),
                (
                    "manufacturer",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                ("model", models.CharField(blank=True, max_length=1000, null=True)),
                ("serial_number", models.CharField(db_index=True, max_length=1000)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "app",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="authentikate.app",
                    ),
                ),
                (
                    "history_relation",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="provenance",
                        to="core.instrument",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical instrument",
                "verbose_name_plural": "historical instruments",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalDataset",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "assignation_id",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True,
                        editable=False,
                        help_text="The time the dataset was created",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The name of the dataset", max_length=200
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="The description of the dataset",
                        max_length=1000,
                        null=True,
                    ),
                ),
                (
                    "is_default",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the dataset is the current default dataset for the user",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "app",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="authentikate.app",
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="The user that created the dataset",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "history_relation",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="provenance",
                        to="core.dataset",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="core.dataset",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical dataset",
                "verbose_name_plural": "historical datasets",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalTrace",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "assignation_id",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "name",
                    models.CharField(
                        default="", help_text="The name of the image", max_length=1000
                    ),
                ),
                (
                    "description",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "kind",
                    django_choices_field.fields.TextChoicesField(
                        choices=[
                            ("MASK", "Mask (Value represent Labels)"),
                            ("VOXEL", "Voxel (Value represent Intensity)"),
                            ("RGB", "RGB (First three channel represent RGB)"),
                            ("UNKNOWN", "Unknown"),
                        ],
                        choices_enum=core.enums.ImageKind,
                        default="UNKNOWN",
                        help_text="The Representation can have vasrying kind, consult your API",
                        max_length=7,
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "app",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="authentikate.app",
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "dataset",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="core.dataset",
                    ),
                ),
                (
                    "history_relation",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="provenance",
                        to="core.trace",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "store",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="The store of the trace",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="core.zarrstore",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical trace",
                "verbose_name_plural": "historical traces",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="File",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        default="", help_text="The name of the file", max_length=1000
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "creator",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "dataset",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="files",
                        to="core.dataset",
                    ),
                ),
                (
                    "origins",
                    models.ManyToManyField(related_name="derived", to="core.file"),
                ),
                (
                    "store",
                    models.ForeignKey(
                        blank=True,
                        help_text="The store of the file",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.bigfilestore",
                    ),
                ),
            ],
        ),
        migrations.AddConstraint(
            model_name="dataset",
            constraint=models.UniqueConstraint(
                condition=models.Q(("is_default", True)),
                fields=("creator", "is_default"),
                name="unique_default_per_creator",
            ),
        ),
    ]
